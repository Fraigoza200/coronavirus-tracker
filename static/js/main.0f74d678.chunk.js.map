{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/COVID_Banner2_small.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","console","log","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","error","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","Covid","alt","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f74d678.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__36KKF\",\"card\":\"Cards_card__3A6rh\",\"infected\":\"Cards_infected__3NgJa\",\"recovered\":\"Cards_recovered__2PzcZ\",\"deaths\":\"Cards_deaths__1nodq\"};","import React from 'react'\r\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core'\r\nimport CountUp from 'react-countup'\r\nimport cx from 'classnames'\r\n\r\nimport styles from './Cards.module.css'\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n\r\n    console.log(confirmed)\r\n    if(!confirmed) {\r\n        return 'Loading...'\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify='center'>\r\n             <Grid item component ={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\" gutterBottom>\r\n                        Infected\r\n                    </Typography>\r\n                    <Typography variant=\"h5\">\r\n                        <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\" />\r\n                    </Typography>\r\n                    <Typography color=\"textSecondary\">\r\n                        {new Date(lastUpdate).toDateString()}\r\n                    </Typography>\r\n                    <Typography variant =\"body2\">\r\n                    Number of Active Cases of COVID-19\r\n                    </Typography>\r\n                </CardContent>\r\n             </Grid>\r\n             <Grid item component ={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\" gutterBottom>\r\n                        Recovered\r\n                    </Typography>\r\n                    <Typography variant=\"h5\">\r\n                        <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\" />\r\n                    </Typography>\r\n                    <Typography color=\"textSecondary\">\r\n                        {new Date(lastUpdate).toDateString()}\r\n                    </Typography>\r\n                    <Typography variant =\"body2\">\r\n                    Number of Recoveries from COVID-19\r\n                    </Typography>\r\n                </CardContent>\r\n             </Grid>\r\n             <Grid item component ={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\" gutterBottom>\r\n                        Deaths\r\n                    </Typography>\r\n                    <Typography variant=\"h5\">\r\n                        <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\" />\r\n                    </Typography>\r\n                    <Typography color=\"textSecondary\">\r\n                        {new Date(lastUpdate).toDateString()}\r\n                    </Typography>\r\n                    <Typography variant =\"body2\">\r\n                    Number of Deaths Caused by COVID-19\r\n                    </Typography>\r\n                </CardContent>\r\n             </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards\r\n","import axios from 'axios'\r\n\r\nconst url = 'https://covid19.mathdro.id/api'\r\n\r\nexport const fetchData = async (country) => {\r\n\r\n    let changeableUrl = url\r\n\r\n    if(country){\r\n        changeableUrl = `${url}/countries/${country}`\r\n    }\r\n\r\n    try {\r\n        const { data: {confirmed, recovered, deaths, lastUpdate}} = await axios.get(changeableUrl)\r\n\r\n        return {confirmed, recovered, deaths, lastUpdate}\r\n    } catch(error) {\r\n        console.error(error)\r\n    }\r\n\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try{\r\n        const { data } = await axios.get(`${url}/daily`)\r\n\r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate\r\n        }))\r\n\r\n        return modifiedData\r\n    } catch (error) {\r\n        console.error(error)\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const { data: { countries }} = await axios.get(`${url}/countries`)\r\n\r\n        return countries.map((country) => country.name)\r\n    } catch(error) {\r\n        console.error(error)\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { fetchDailyData } from '../../api'\r\nimport { Line, Bar } from 'react-chartjs-2'\r\n\r\nimport styles from './Chart.module.css'\r\n\r\n\r\nconst Chart = ({ data: { confirmed, deaths, recovered }, country }) => {\r\n    const [dailyData, setDailyData] = useState([])\r\n\r\n    useEffect( () => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData())\r\n        }\r\n\r\n        fetchAPI()\r\n    }, [])\r\n\r\n    const lineChart = (\r\n        dailyData.length ? (\r\n        <Line data={{\r\n            labels: dailyData.map(({data}) => data),\r\n            datasets: [ {\r\n                data: dailyData.map(({ confirmed }) => confirmed),\r\n                label: 'Infected',\r\n                borderColor: '#3333ff',\r\n                fill: true,\r\n            }, {\r\n                data: dailyData.map(({ deaths }) => deaths),\r\n                label: 'Deaths',\r\n                borderColor: 'red',\r\n                backgroundColor: 'rgba(255,0,0,0.5)',\r\n                fill: true,\r\n\r\n            }],\r\n        }}/>) : null\r\n    )\r\n\r\n\r\n    const barChart = (\r\n        confirmed ? (\r\n            <Bar \r\n            data={{ \r\n                labels: ['Infected','Recovered', 'Deaths'],\r\n                datasets: [{\r\n                    label: 'People',\r\n                    backgroundColor: ['rgba(0,0,255,0.5)',\r\n                    'rgba(0,255,0,0.5)',\r\n                    'rgba(255,0,0,0.5)'],\r\n                    data:[confirmed.value,recovered.value, deaths.value]\r\n                }]\r\n            }}\r\n            options={{\r\n                legend: {display : false},\r\n                title: { display: true, text: `Current State in ${country}`}\r\n            }}\r\n            />\r\n        ) : null\r\n    )\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n        {country ? barChart: lineChart }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart","import React, { useState, useEffect } from 'react'\r\nimport { NativeSelect, FormControl } from '@material-ui/core'\r\n\r\nimport styles from './CountryPicker.module.css'\r\n\r\nimport { fetchCountries } from '../../api'\r\n\r\nconst CountryPicker = ({ handleCountryChange}) => {\r\n const [fetchedCountries, setFetchedCountries] = useState([])  \r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setFetchedCountries(await fetchCountries())\r\n        }\r\n\r\n        fetchAPI()\r\n    }, [setFetchedCountries])\r\n\r\n\r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value=\"\">\r\n                    Global\r\n                </option>\r\n                {fetchedCountries.map((country,i) => <option key = {i} value = {country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker","import React from 'react';\nimport { Cards, Chart, CountryPicker } from './components'\nimport styles from './App.module.css'\nimport { fetchData } from './api'\n\nimport Covid from './images/COVID_Banner2_small.png'\n\nclass App extends React.Component {\n\n  state = {\n    data: {},\n    country: '',\n  }\n\n  async componentDidMount() {\n    const fetchedData = await fetchData()\n\n    this.setState({ data: fetchedData })\n  }\n\n  handleCountryChange = async (country) => {\n    const fetchedData = await fetchData(country)\n\n    this.setState({ data: fetchedData, country: country })\n  }\n\n  render() {\n\n    const { data, country } = this.state\n\n    return (\n      <div className={styles.container}>\n        <img className={styles.image} src={Covid} alt=\"COVID-19\"/>\n          <Cards data = {data}/>\n          <CountryPicker handleCountryChange={this.handleCountryChange}/>\n          <Chart data ={data} country={country}/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3GB1J\",\"image\":\"App_image__3kL3j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__18hJh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1QoMZ\"};","module.exports = __webpack_public_path__ + \"static/media/COVID_Banner2_small.b91d250a.png\";"],"sourceRoot":""}